{"version":3,"sources":["../../../server/resources/users/model.js"],"names":["userSchema","Schema","email","type","String","required","passwordHash","toJSON","transform","doc","ret","__v","virtual","set","password","_tempPassword","pre","next","methods","compare","authToken","statics","findByToken","token","Promise","resolve"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,IAAMA,UAAU,GAAG,IAAIC,gBAAJ,CAAW;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADqB;AAK5BC,EAAAA,YAAY,EAAEF;AALc,CAAX,EAOjB;AACEG,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,mBAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC7B,aAAOA,GAAG,CAACJ,YAAX;AACA,aAAOI,GAAG,CAACC,GAAX;AACA,aAAOD,GAAP;AACD;AALK;AADV,CAPiB,CAAnB;AAiBAV,UAAU,CAACY,OAAX,CAAmB,UAAnB,EAA+BC,GAA/B,CAAmC,UAAUC,QAAV,EAAoB;AACrD,OAAKC,aAAL,GAAqBD,QAArB;AACD,CAFD;AAIAd,UAAU,CAACgB,GAAX,CAAe,MAAf,EAAuB,UAAUC,IAAV,EAAgB;AACrC,OAAKX,YAAL,GAAoB,gBAAK,KAAKS,aAAV,CAApB;AACAE,EAAAA,IAAI;AACL,CAHD;;AAKAjB,UAAU,CAACkB,OAAX,CAAmBC,OAAnB,GAA6B,UAAUL,QAAV,EAAoB;AAC/C,SAAO,mBAAQA,QAAR,EAAkB,KAAKR,YAAvB,CAAP;AACD,CAFD;;AAIAN,UAAU,CAACkB,OAAX,CAAmBE,SAAnB,GAA+B,YAAY;AACzC,SAAO,oBAAS,IAAT,CAAP;AACD,CAFD;;AAIApB,UAAU,CAACqB,OAAX,CAAmBC,WAAnB,GAAiC,UAAUC,KAAV,EAAiB;AAChD,SAAOC,OAAO,CAACC,OAAR,CAAgB,sBAAWF,KAAX,CAAhB,CAAP;AACD,CAFD;;eAIe,qBAAM,MAAN,EAAcvB,UAAd,C","sourcesContent":["import { Schema, model } from 'mongoose';\nimport { compare, tokenize, hash, untokenize } from '../../lib/auth';\n\nconst userSchema = new Schema({\n  email: {\n    type: String,\n    required: true\n  },\n  passwordHash: String\n},\n  {\n    toJSON: {\n      transform: function (doc, ret) {\n        delete ret.passwordHash;\n        delete ret.__v;\n        return ret;\n      }\n    }\n  });\n\nuserSchema.virtual('password').set(function (password) {\n  this._tempPassword = password;\n});\n\nuserSchema.pre('save', function (next) {\n  this.passwordHash = hash(this._tempPassword);\n  next();\n});\n\nuserSchema.methods.compare = function (password) {\n  return compare(password, this.passwordHash);\n};\n\nuserSchema.methods.authToken = function () {\n  return tokenize(this);\n};\n\nuserSchema.statics.findByToken = function (token) {\n  return Promise.resolve(untokenize(token));\n}\n\nexport default model('User', userSchema);\n"],"file":"model.js"}