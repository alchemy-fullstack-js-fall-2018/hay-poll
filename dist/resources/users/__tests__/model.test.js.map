{"version":3,"sources":["../../../../server/resources/users/__tests__/model.test.js"],"names":["describe","test","data","email","user","User","jsonUser","toJSON","expect","toEqual","_id","any","Object","vote","errors","validateSync","properties","message"],"mappings":";;AAAA;;AACA;;;;;;;;AAEAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AAE3BC,EAAAA,IAAI,CAAC,wBAAD,EAA2B,YAAM;AACnC,QAAMC,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,QAAMC,IAAI,GAAG,IAAIC,cAAJ,CAASH,IAAT,CAAb;AACA,QAAMI,QAAQ,GAAGF,IAAI,CAACG,MAAL,EAAjB;AAEAC,IAAAA,MAAM,CAACF,QAAD,CAAN,CAAiBG,OAAjB,mBACKP,IADL;AAEEQ,MAAAA,GAAG,EAAEF,MAAM,CAACG,GAAP,CAAWC,MAAX;AAFP;AAID,GAXG,CAAJ;AAaAX,EAAAA,IAAI,CAAC,gBAAD,EAAmB,YAAM;AAC3B,QAAMY,IAAI,GAAG,IAAIR,cAAJ,CAAS,EAAT,CAAb;AACA,QAAMS,MAAM,GAAG,uBAAUD,IAAI,CAACE,YAAL,EAAV,EAA+B,CAA/B,CAAf;AAEAP,IAAAA,MAAM,CAACM,MAAM,CAACX,KAAP,CAAaa,UAAb,CAAwBC,OAAzB,CAAN,CAAwCR,OAAxC,CAAgD,2BAAhD;AACD,GALG,CAAJ;AAOD,CAtBO,CAAR","sourcesContent":["import User from '../model';\nimport { getErrors } from '../../../testing/lib/errors';\n\ndescribe('user model', () => {\n\n  test('validates a good model', () => {\n    const data = {\n      email: 'jack@test.com'\n    };\n    const user = new User(data);\n    const jsonUser = user.toJSON();\n\n    expect(jsonUser).toEqual({\n      ...data,\n      _id: expect.any(Object)\n    });\n  });\n\n  test('requires email', () => {\n    const vote = new User({});\n    const errors = getErrors(vote.validateSync(), 1);\n\n    expect(errors.email.properties.message).toEqual('Path `email` is required.');\n  });\n\n});\n"],"file":"model.test.js"}