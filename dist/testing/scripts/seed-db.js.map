{"version":3,"sources":["../../../server/testing/scripts/seed-db.js"],"names":["chance","require","Chance","HOST","symbols","Promise","all","Array","apply","length","map","name","clearPassword","word","email","user","request","post","send","then","body","token","tokens","_","i","set","currency","exchange","quantity","natural","min","max"],"mappings":";;AACA;;;;AADA;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,EAAf;;AAEA,IAAMC,IAAI,GAAG,uBAAb;AAEA,IAAMC,OAAO,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAhB;AAEAC,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkB;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAlB,EACPC,GADO,CACH;AAAA,SAAO;AAAEC,IAAAA,IAAI,EAAEX,MAAM,CAACW,IAAP,EAAR;AAAuBC,IAAAA,aAAa,EAAEZ,MAAM,CAACa,IAAP,EAAtC;AAAqDC,IAAAA,KAAK,EAAEd,MAAM,CAACc,KAAP;AAA5D,GAAP;AAAA,CADG,EAEPJ,GAFO,CAEH,UAAAK,IAAI,EAAI;AACT,SAAOC,oBACFC,IADE,WACMd,IADN,uBAEFe,IAFE,CAEG;AAAEP,IAAAA,IAAI,YAAKI,IAAI,CAACJ,IAAV,CAAN;AAAwBG,IAAAA,KAAK,YAAKC,IAAI,CAACD,KAAV,CAA7B;AAAgDF,IAAAA,aAAa,YAAKG,IAAI,CAACH,aAAV;AAA7D,GAFH,EAGFO,IAHE,CAGG;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WAAcA,IAAI,CAACC,KAAnB;AAAA,GAHH,CAAP;AAIH,CAPO,CAAZ,EASKF,IATL,CASU,UAAAG,MAAM,EAAI;AACZ,SAAOjB,OAAO,CAACC,GAAR,CAAYgB,MAAM,CAACZ,GAAP,CAAW,UAAAW,KAAK,EAAI;AACnC,WAAOhB,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAlB,EACdC,GADc,CACV,UAACa,CAAD,EAAIC,CAAJ,EAAU;AACX,aAAOR,oBACFC,IADE,WACMd,IADN,8BAEFsB,GAFE,CAEE,eAFF,mBAE6BJ,KAF7B,GAGFH,IAHE,CAGG;AACFQ,QAAAA,QAAQ,EAAEtB,OAAO,CAACoB,CAAC,GAAGpB,OAAO,CAACK,MAAb,CADf;AAEFkB,QAAAA,QAAQ,EAAE,aAFR;AAGFC,QAAAA,QAAQ,EAAE5B,MAAM,CAAC6B,OAAP,CAAe;AAAEC,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,GAAG,EAAE;AAAf,SAAf;AAHR,OAHH,CAAP;AAQH,KAVc,CAAZ,CAAP;AAWH,GAZkB,CAAZ,CAAP;AAaH,CAvBL","sourcesContent":["// const { dropCollection } = require('../util/db');\nimport request from 'superagent';\nconst chance = require('chance').Chance();\n\nconst HOST = 'http://localhost:9876';\n\nconst symbols = ['BTC', 'XRP', 'ETH', 'LTC'];\n\nPromise.all(Array.apply(null, { length: 20 })\n    .map(() => ({ name: chance.name(), clearPassword: chance.word(), email: chance.email() }))\n    .map(user => {\n        return request\n            .post(`${HOST}/api/auth/signup`)\n            .send({ name: `${user.name}`, email: `${user.email}`, clearPassword: `${user.clearPassword}` })\n            .then(({ body }) => body.token);\n    })\n)\n    .then(tokens => {\n        return Promise.all(tokens.map(token => {\n            return Promise.all(Array.apply(null, { length: 10 })\n                .map((_, i) => {\n                    return request\n                        .post(`${HOST}/api/users/transactions`)\n                        .set('Authorization', `Bearer ${token}`)\n                        .send({\n                            currency: symbols[i % symbols.length],\n                            exchange: 'Fake Market',\n                            quantity: chance.natural({ min: 1, max: 20 })\n                        });\n                }));\n        }));\n    });\n"],"file":"seed-db.js"}