{"version":3,"sources":["../../../server/testing/fixtures/vote.js"],"names":["chance","require","Chance","mockVote","poll","Types","ObjectId","selection","vote","i","_id","choices","sendVote","token","app","post","set","send","randomVoteQuantities","length","Array","fill","map","natural","min","max","randomVoteArrays","quantities","quantity","id","runVotes","voteArrays","forEach","array","index","voteToSend"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,EAAf;;AAEO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAO;AAC7BC,IAAAA,IAAI,EAAEC,gBAAMC,QAAN,EADuB;AAE7BC,IAAAA,SAAS,EAAEF,gBAAMC,QAAN;AAFkB,GAAP;AAAA,CAAjB;;;;AAKP,IAAME,IAAI,GAAG,SAAPA,IAAO,CAACJ,IAAD,EAAOK,CAAP;AAAA,SAAc;AACzBL,IAAAA,IAAI,EAAEA,IAAI,CAACM,GADc;AAEzBH,IAAAA,SAAS,EAAEH,IAAI,CAACO,OAAL,CAAaF,CAAb,EAAgBC;AAFF,GAAd;AAAA,CAAb;;AAKA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACR,IAAD,EAAOI,IAAP,EAAaK,KAAb,EAAuB;AACtC,SAAO,wBAAQC,YAAR,EACJC,IADI,sBACeX,IAAI,CAACM,GADpB,aAEJM,GAFI,CAEA,eAFA,mBAE2BH,KAF3B,GAGJI,IAHI,CAGCT,IAHD,CAAP;AAID,CALD;;AAOO,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,MAAM;AAAA,SAAIC,KAAK,CAACD,MAAD,CAAL,CAC3CE,IAD2C,GAE3CC,GAF2C,CAEvC;AAAA,WAAMtB,MAAM,CAACuB,OAAP,CAAe;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE;AAAf,KAAf,CAAN;AAAA,GAFuC,CAAJ;AAAA,CAAnC;;;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAavB,IAAb;AAAA,SAAsBuB,UAAU,CAACL,GAAX,CAAe,UAACM,QAAD,EAAWnB,CAAX,EAAiB;AACpF,QAAMoB,EAAE,GAAGzB,IAAI,CAACO,OAAL,CAAaF,CAAb,EAAgBC,GAA3B;AACA,WAAOU,KAAK,CAACQ,QAAD,CAAL,CAAgBP,IAAhB,CAAqBjB,IAAI,CAACO,OAAL,CAAaF,CAAb,EAAgBC,GAArC,CAAP;AACD,GAHqD,CAAtB;AAAA,CAAzB;;;;AAKA,IAAMoB,QAAQ,GAAG,SAAXA,QAAW,CAAC1B,IAAD,EAAO2B,UAAP,EAAmBlB,KAAnB,EAA6B;AACnD,SAAOkB,UAAU,CAACC,OAAX,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC1CD,IAAAA,KAAK,CAACD,OAAN;AAAA;AAAA;AAAA;AAAA,4BAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACNG,cAAAA,UADM,GACO3B,IAAI,CAACJ,IAAD,EAAO8B,KAAP,CADX;AAAA;AAAA,qBAENtB,QAAQ,CAACR,IAAD,EAAO+B,UAAP,EAAmBtB,KAAnB,CAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAd;AAID,GALM,CAAP;AAMD,CAPM","sourcesContent":["import app from '../../app';\nimport request from 'supertest';\nimport { Types } from 'mongoose';\nconst chance = require('chance').Chance();\n\nexport const mockVote = () => ({\n  poll: Types.ObjectId(),\n  selection: Types.ObjectId()\n});\n\nconst vote = (poll, i) => ({\n  poll: poll._id,\n  selection: poll.choices[i]._id\n});\n\nconst sendVote = (poll, vote, token) => {\n  return request(app)\n    .post(`/api/polls/${poll._id}/votes`)\n    .set('Authorization', `Bearer ${token}`)\n    .send(vote);\n};\n\nexport const randomVoteQuantities = length => Array(length)\n  .fill()\n  .map(() => chance.natural({ min: 1, max: 20 }));\n\nexport const randomVoteArrays = (quantities, poll) => quantities.map((quantity, i) => {\n  const id = poll.choices[i]._id;\n  return Array(quantity).fill(poll.choices[i]._id);\n});\n\nexport const runVotes = (poll, voteArrays, token) => {\n  return voteArrays.forEach((array, index) => {\n    array.forEach(async () => {\n      const voteToSend = vote(poll, index);\n      await sendVote(poll, voteToSend, token);\n    })\n  })\n}\n"],"file":"vote.js"}